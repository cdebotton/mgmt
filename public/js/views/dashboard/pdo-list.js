// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'ns', 'jst', 'views/dashboard/pdo-request-item'], function(Backbone, ns) {
    ns('United.Views.Dashboard.PdoList');
    return United.Views.Dashboard.PdoList = (function(_super) {

      __extends(PdoList, _super);

      function PdoList() {
        this.close = __bind(this.close, this);

        this.deletePdo = __bind(this.deletePdo, this);

        this.addOne = __bind(this.addOne, this);

        this.addAll = __bind(this.addAll, this);
        return PdoList.__super__.constructor.apply(this, arguments);
      }

      PdoList.prototype.el = '#pdo-list';

      PdoList.prototype.events = {
        'click #close-pdo-list': 'close',
        'click .cancel-request': 'deletePdo'
      };

      PdoList.prototype.initialize = function() {
        this.list = this.$('#pdo-list-ul');
        this.addAll();
        return this.render();
      };

      PdoList.prototype.addAll = function(items) {
        return this.model.get('requests').each(this.addOne);
      };

      PdoList.prototype.addOne = function(item) {
        var view;
        view = new United.Views.Dashboard.PdoRequestItem({
          model: item
        });
        return this.list.append(view.render().$el);
      };

      PdoList.prototype.render = function() {
        this.$el.css({
          display: 'block',
          opacity: 0
        });
        this.$el.animate({
          opacity: 1
        }, 175, 'ease-in');
        return this;
      };

      PdoList.prototype.deletePdo = function(e) {
        var id, pdo;
        e.preventDefault();
        id = $(e.currentTarget).data('id');
        pdo = this.model.get('requests').find(id);
        return console.log(pdo);
      };

      PdoList.prototype.close = function(e) {
        var _this = this;
        this.list.html('');
        e.preventDefault();
        return this.$el.animate({
          opacity: 0
        }, 175, 'ease-out', function() {
          _this.$el.html('');
          _this.$el.css('display', 'none');
          _this.undelegateEvents();
          return United.EventBus.trigger('pdo-list-closed');
        });
      };

      return PdoList;

    })(Backbone.View);
  });

}).call(this);
