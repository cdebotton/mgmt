// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'ns', 'views/projects/project-task'], function(Backbone, ns) {
    ns('United.Views.Projects.TaskEditor');
    return United.Views.Projects.TaskEditor = (function(_super) {

      __extends(TaskEditor, _super);

      function TaskEditor() {
        this.addOne = __bind(this.addOne, this);
        return TaskEditor.__super__.constructor.apply(this, arguments);
      }

      TaskEditor.prototype.el = '#project-editing-viewport';

      TaskEditor.prototype.initialize = function() {
        return this.addAll();
      };

      TaskEditor.prototype.addOne = function(task) {
        return console.log(task);
      };

      TaskEditor.prototype.addAll = function(tasks) {
        if (this.model.get('project').get('tasks').length === 0) {
          this.model.get('project').get('tasks').add();
        }
        return this.model.get('project').get('tasks').each(this.addOne);
      };

      return TaskEditor;

    })(Backbone.View);
  });

}).call(this);
