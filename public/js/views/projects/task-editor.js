// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'ns', 'views/tasks/task-element'], function(Backbone, ns) {
    ns('United.Views.Projects.TaskEditor');
    return United.Views.Projects.TaskEditor = (function(_super) {

      __extends(TaskEditor, _super);

      function TaskEditor() {
        return TaskEditor.__super__.constructor.apply(this, arguments);
      }

      TaskEditor.prototype.el = '#project-editing-viewport';

      TaskEditor.prototype.tasks = [];

      TaskEditor.prototype.initialize = function() {
        this.model.get('project').on('change:name', this.render, this);
        this.model.get('project').get('tasks').on('change:start_date change:end_date change:name', this.render, this);
        return this.render();
      };

      TaskEditor.prototype.render = function() {
        var duration, end, first, last, start, task, _i, _len, _ref,
          _this = this;
        _ref = this.tasks;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          task = _ref[_i];
          task.remove();
        }
        first = this.model.get('project').get('tasks').first();
        last = this.model.get('project').get('tasks').last();
        start = first.get('start_date').getTime();
        end = last.get('end_date').getTime();
        duration = end - start;
        return this.model.get('project').get('tasks').each(function(task) {
          var el, view;
          view = new United.Views.Tasks.TaskElement({
            model: task,
            demo: true
          });
          _this.tasks.push(view);
          el = view.render().$el;
          return _this.$el.append(el);
        });
      };

      return TaskEditor;

    })(Backbone.View);
  });

}).call(this);
