// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'ns', 'dropdown'], function(Backbone, ns) {
    ns('BU.Views.GraphFilters');
    return BU.Views.GraphFilters = (function(_super) {

      __extends(GraphFilters, _super);

      function GraphFilters() {
        this.resetFilter = __bind(this.resetFilter, this);
        return GraphFilters.__super__.constructor.apply(this, arguments);
      }

      GraphFilters.prototype.el = '#filter-menu';

      GraphFilters.prototype.events = {
        'click [data-discipline]': 'filterDiscipline',
        'click [data-role]': 'filterRole',
        'click [data-reset-filter]': 'resetFilter'
      };

      GraphFilters.prototype.initialize = function() {
        return this.model.on('change', this.alertFilterChange, this);
      };

      GraphFilters.prototype.filterDiscipline = function(e) {
        var btn;
        btn = $(e.currentTarget);
        return this.model.set({
          'filterType': 'disciplines',
          'filter': btn.data('discipline')
        });
      };

      GraphFilters.prototype.filterRole = function(e) {
        var btn;
        btn = $(e.currentTarget);
        return this.model.set({
          'filterType': 'roles',
          'filter': btn.data('role')
        });
      };

      GraphFilters.prototype.resetFilter = function(e) {
        return this.model.set({
          'filterType': null,
          'filter': null
        });
      };

      GraphFilters.prototype.alertFilterChange = function() {
        return BU.EventBus.trigger('set-filter', this.model.get('filterType'), this.model.get('filter'));
      };

      return GraphFilters;

    })(Backbone.View);
  });

}).call(this);
