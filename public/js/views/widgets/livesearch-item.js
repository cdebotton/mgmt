// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'ns'], function(Backbone, ns) {
    ns('United.Views.Widgets.LiveSearchItem');
    return United.Views.Widgets.LiveSearchItem = (function(_super) {

      __extends(LiveSearchItem, _super);

      function LiveSearchItem() {
        return LiveSearchItem.__super__.constructor.apply(this, arguments);
      }

      LiveSearchItem.prototype.tagName = 'li';

      LiveSearchItem.prototype.initialize = function() {
        return this.model.on('change:active', this.highlight, this);
      };

      LiveSearchItem.prototype.render = function() {
        var query, string;
        query = this.model.get('query').replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&');
        string = this.model.get('name').replace(new RegExp('(' + query + ')', 'ig'), function($1, match) {
          return '<strong>' + match + '</strong>';
        });
        this.$el.html(string);
        return this;
      };

      LiveSearchItem.prototype.highlight = function(model, active, status) {
        if (active === true) {
          return this.$el.addClass('active');
        } else {
          return this.$el.removeClass('active');
        }
      };

      return LiveSearchItem;

    })(Backbone.View);
  });

}).call(this);
