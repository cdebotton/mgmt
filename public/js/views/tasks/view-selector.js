// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'ns'], function(Backbone, ns) {
    ns('United.Views.Tasks.ViewSelector');
    return United.Views.Tasks.ViewSelector = (function(_super) {

      __extends(ViewSelector, _super);

      function ViewSelector() {
        this.setView = __bind(this.setView, this);
        return ViewSelector.__super__.constructor.apply(this, arguments);
      }

      ViewSelector.prototype.el = '#view-selector';

      ViewSelector.prototype.events = {
        'click a': 'setView'
      };

      ViewSelector.prototype.initialize = function() {
        return this.model.on('change:currentView', this.setActive, this);
      };

      ViewSelector.prototype.setView = function(e) {
        var btn, type;
        btn = $(e.currentTarget);
        if ((type = btn.data('view'))) {
          this.model.set('currentView', type);
        }
        return e.preventDefault();
      };

      ViewSelector.prototype.setActive = function(model, type) {
        var current;
        current = this.$("[data-view=\"" + type + "\"]");
        return current.parent().addClass('active').siblings('li').removeClass('active');
      };

      return ViewSelector;

    })(Backbone.View);
  });

}).call(this);
