// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'jquery', 'underscore', 'ns', 'animate', 'jst', 'views/widgets/modal'], function(Backbone, $, _, ns) {
    ns('United.Views.Dashboard.PdoRequest');
    return United.Views.Dashboard.PdoRequest = (function(_super) {
      var PDO_TYPES;

      __extends(PdoRequest, _super);

      function PdoRequest() {
        this.resetMessage = __bind(this.resetMessage, this);

        this.resetEndYear = __bind(this.resetEndYear, this);

        this.resetEndDay = __bind(this.resetEndDay, this);

        this.resetEndMonth = __bind(this.resetEndMonth, this);

        this.resetStartYear = __bind(this.resetStartYear, this);

        this.resetStartDay = __bind(this.resetStartDay, this);

        this.resetStartMonth = __bind(this.resetStartMonth, this);

        this.setMessage = __bind(this.setMessage, this);

        this.setType = __bind(this.setType, this);

        this.setEndDay = __bind(this.setEndDay, this);

        this.setEndMonth = __bind(this.setEndMonth, this);

        this.setEndYear = __bind(this.setEndYear, this);

        this.setStartDay = __bind(this.setStartDay, this);

        this.setStartMonth = __bind(this.setStartMonth, this);

        this.setStartYear = __bind(this.setStartYear, this);

        this.cancelRequest = __bind(this.cancelRequest, this);
        return PdoRequest.__super__.constructor.apply(this, arguments);
      }

      PDO_TYPES = {
        'Please select a type': 'null',
        'Vacation': 'vacation',
        'Voting': 'voting',
        'Jury Duty': 'jury duty',
        'Maternity Leave': 'maternity leave',
        'Funeral Leave': 'funeral leave',
        'Other': 'other'
      };

      PdoRequest.prototype.el = '#pdo-request';

      PdoRequest.prototype.events = {
        'click #make-request': 'makeRequest',
        'click .icon-remove': 'cancelRequest',
        'click #cancel-request': 'cancelRequest',
        'keyup [name="start_month"]': 'setStartMonth',
        'keyup [name="start_day"]': 'setStartDay',
        'keyup [name="start_year"]': 'setStartYear',
        'keyup [name="end_month"]': 'setEndMonth',
        'keyup [name="end_day"]': 'setEndDay',
        'keyup [name="end_year"]': 'setEndYear',
        'keyup [name="message"]': 'setMessage',
        'change [name="pdo-type"]': 'setType',
        'blur [name="start_month"]': 'resetStartMonth',
        'blur [name="start_day"]': 'resetStartDay',
        'blur [name="start_year"]': 'resetStartYear',
        'blur [name="end_month"]': 'resetEndMonth',
        'blur [name="end_day"]': 'resetEndDay',
        'blur [name="end_year"]': 'resetEndYear',
        'blur [name="message"]': 'resetMessage'
      };

      PdoRequest.prototype.initialize = function() {
        United.JST.Hb.registerHelper('printTypes', this.printTypes);
        this.model.on('destroy', this.destroyed, this);
        return this.render();
      };

      PdoRequest.prototype.render = function() {
        var ctx, h, html;
        ctx = this.model.toJSON();
        html = United.JST.PdoRequest(ctx);
        this.$el.html(html);
        if (this.options.open === false) {
          this.$el.css({
            opacity: 0,
            display: 'block'
          });
          h = this.$el.outerHeight();
          this.$el.css({
            marginTop: -(h + 10),
            opacity: 1
          });
          return this.$el.animate({
            marginTop: 0
          }, 175, 'ease-out');
        }
      };

      PdoRequest.prototype.makeRequest = function(e) {
        var modal, resp;
        e.preventDefault();
        if ((resp = this.model.isValid()) !== true) {
          return modal = new United.Views.Widgets.Modal({
            model: new Backbone.Model({
              title: 'Woops!',
              msg: "<p>" + resp + "</p>",
              options: {
                Okay: United.Views.Widgets.Modal.prototype.closeModal
              }
            })
          });
        } else {
          return this.model.save({}, {
            wait: true,
            success: _.bind(this.destroyed, this)
          });
        }
      };

      PdoRequest.prototype.cancelRequest = function(e) {
        e.preventDefault();
        return this.model.destroy();
      };

      PdoRequest.prototype.destroyed = function(model) {
        var h,
          _this = this;
        United.EventBus.trigger('request-closed');
        h = this.$el.innerHeight();
        return this.$el.animate({
          marginTop: -(h + 10)
        }, 175, 'ease-int', function() {
          _this.$el.html('');
          return _this.undelegateEvents();
        });
      };

      PdoRequest.prototype.setStartYear = function(e) {
        var date;
        if (e.currentTarget.value.match(/^\d{4}$/)) {
          date = new Date(this.model.get('start_date'));
          date.setYear(parseInt(e.currentTarget.value, 10));
          if (date < this.model.get('end_date')) {
            return this.model.set('start_date', date);
          }
        }
      };

      PdoRequest.prototype.setStartMonth = function(e) {
        var date, target;
        target = (parseInt(e.currentTarget.value, 10)) - 1;
        if ((0 <= target && target <= 12)) {
          date = new Date(this.model.get('start_date'));
          date.setMonth(target);
          if (date < this.model.get('end_date')) {
            return this.model.set('start_date', date);
          }
        }
      };

      PdoRequest.prototype.setStartDay = function(e) {
        var date, target;
        target = parseInt(e.currentTarget.value, 10);
        if ((0 < target && target < 32)) {
          date = new Date(this.model.get('start_date'));
          date.setDate(target);
          if (date < this.model.get('end_date')) {
            return this.model.set('start_date', date);
          }
        }
      };

      PdoRequest.prototype.setEndYear = function(e) {
        var date;
        if (e.currentTarget.value.match(/^\d{4}$/)) {
          date = new Date(this.model.get('end_date'));
          date.setYear(parseInt(e.currentTarget.value, 10));
          if (date > this.model.get('start_date')) {
            return this.model.set('end_date', date);
          }
        }
      };

      PdoRequest.prototype.setEndMonth = function(e) {
        var date, target;
        target = (parseInt(e.currentTarget.value, 10)) - 1;
        if ((0 <= target && target <= 12)) {
          date = new Date(this.model.get('end_date'));
          date.setMonth(target);
          if (date > this.model.get('start_date')) {
            return this.model.set('end_date', date);
          }
        }
      };

      PdoRequest.prototype.setEndDay = function(e) {
        var date, target;
        target = parseInt(e.currentTarget.value, 10);
        if ((0 < target && target < 32)) {
          date = new Date(this.model.get('end_date'));
          date.setDate(target);
          if (date > this.model.get('start_date')) {
            return this.model.set('end_date', date);
          }
        }
      };

      PdoRequest.prototype.setType = function(e) {
        return this.model.set('type', e.currentTarget.value);
      };

      PdoRequest.prototype.setMessage = function(e) {
        return this.model.set('message', e.currentTarget.value);
      };

      PdoRequest.prototype.printTypes = function(selected, opts) {
        var buffer, item, key, value;
        buffer = '';
        for (key in PDO_TYPES) {
          value = PDO_TYPES[key];
          item = {
            key: key,
            value: value,
            selected: value === selected ? ' SELECTED' : ''
          };
          buffer += opts.fn(item);
        }
        return buffer;
      };

      PdoRequest.prototype.resetStartMonth = function(e) {
        return e.currentTarget.value = this.model.get('start_date').getMonth() + 1;
      };

      PdoRequest.prototype.resetStartDay = function(e) {
        return e.currentTarget.value = this.model.get('start_date').getDate();
      };

      PdoRequest.prototype.resetStartYear = function(e) {
        return e.currentTarget.value = this.model.get('start_date').getFullYear();
      };

      PdoRequest.prototype.resetEndMonth = function(e) {
        return e.currentTarget.value = this.model.get('end_date').getMonth() + 1;
      };

      PdoRequest.prototype.resetEndDay = function(e) {
        return e.currentTarget.value = this.model.get('end_date').getDate();
      };

      PdoRequest.prototype.resetEndYear = function(e) {
        return e.currentTarget.value = this.model.get('end_date').getFullYear();
      };

      PdoRequest.prototype.resetMessage = function(e) {
        return e.currentTarget.value = this.model.get('msg');
      };

      return PdoRequest;

    })(Backbone.View);
  });

}).call(this);
