// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'jquery', 'ns', 'jst', 'animate', 'views/projects/task-editor'], function(Backbone, $, ns) {
    ns('United.Views.Projects.ProjectModal');
    return United.Views.Projects.ProjectModal = (function(_super) {

      __extends(ProjectModal, _super);

      function ProjectModal() {
        this.saveProject = __bind(this.saveProject, this);

        this.bindEscape = __bind(this.bindEscape, this);

        this.closeModal = __bind(this.closeModal, this);

        this.dropModal = __bind(this.dropModal, this);

        this.setClient = __bind(this.setClient, this);

        this.setCode = __bind(this.setCode, this);

        this.setName = __bind(this.setName, this);
        return ProjectModal.__super__.constructor.apply(this, arguments);
      }

      ProjectModal.prototype.tagName = 'section';

      ProjectModal.prototype.className = 'striped-cheech';

      ProjectModal.prototype.events = {
        'click .icon-remove': 'closeModal',
        'click button[type="submit"]': 'saveProject',
        'keyup input[name="name"]': 'setName',
        'keyup input[name="code"]': 'setCode',
        'keyup input[name="client"]': 'setClient'
      };

      ProjectModal.prototype.render = function() {
        var ctx, html;
        this.body = $('body');
        ctx = this.model.get('project').toJSON();
        html = United.JST.EditProjectModal(ctx);
        this.$el.html(html);
        this.expose();
        return this;
      };

      ProjectModal.prototype.setName = function(e) {
        return this.model.get('project').set('name', e.currentTarget.value);
      };

      ProjectModal.prototype.setCode = function(e) {
        this.model.get('project').set('code', e.currentTarget.value);
        return console.log(this.model.toJSON());
      };

      ProjectModal.prototype.setClient = function(e) {
        return this.model.get('project').set('name', e.currentTarget.value);
      };

      ProjectModal.prototype.expose = function() {
        this.body.bind('keyup', this.bindEscape);
        return this.$el.css('opacity', 0).animate({
          opacity: 1
        }, 150, 'ease-in', this.dropModal);
      };

      ProjectModal.prototype.dropModal = function() {
        this.$('.edit-modal').delay(150).css({
          top: '50%',
          opacity: 1,
          marginTop: -($(window).height() + 250)
        }).animate({
          marginTop: -250
        });
        return this.tasks = new United.Views.Projects.TaskEditor({
          model: this.model
        });
      };

      ProjectModal.prototype.closeModal = function(e) {
        var _this = this;
        this.$('.edit-modal').animate({
          marginTop: -($(window).height() + 250)
        }, function() {
          return _this.$el.animate({
            opacity: 0
          }, function() {
            _this.tasks.remove();
            return _this.$el.remove();
          });
        });
        this.body.unbind('keyup', this.bindEscape);
        United.EventBus.trigger('modal-closed');
        return e.preventDefault();
      };

      ProjectModal.prototype.bindEscape = function(e) {
        if (e.keyCode === 27) {
          return this.closeModal(e);
        }
      };

      ProjectModal.prototype.saveProject = function(e) {};

      return ProjectModal;

    })(Backbone.View);
  });

}).call(this);
