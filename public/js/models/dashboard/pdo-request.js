// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'ns', 'relational'], function(Backbone, ns) {
    var n, t;
    t = new Date();
    t.setHours(0, 0, 0, 0);
    n = new Date(t.getTime());
    n.setDate(t.getDate() + 7);
    ns('United.Models.Dashboard.PdoRequest');
    United.Models.Dashboard.PdoRequest = (function(_super) {

      __extends(PdoRequest, _super);

      function PdoRequest() {
        this.url = __bind(this.url, this);
        return PdoRequest.__super__.constructor.apply(this, arguments);
      }

      PdoRequest.prototype.url = function() {
        return "/api/v1/requests" + (!this.isNew() ? "/" + (this.get('id')) : '');
      };

      PdoRequest.prototype.defaults = {
        start_date: t,
        end_date: n,
        type: null,
        message: '',
        status: false
      };

      PdoRequest.prototype.isValid = function() {
        if (!(new Date(this.attributes.start_date)) instanceof Date) {
          return 'The start date is not a valid date.';
        }
        if (!(new Date(this.attributes.end_date)) instanceof Date) {
          return 'The end date is not a valid date.';
        }
        if (this.attributes.end_date < this.attributes.start_date) {
          return 'The end date must come after the start date';
        }
        if (this.attributes.type === null || this.attributes.type === 'null') {
          return 'You must select a type of request.';
        } else {
          return true;
        }
      };

      PdoRequest.prototype.parse = function(resp) {
        if ((resp.start_date != null) && !resp.start_date instanceof Date) {
          resp.start_date = new Date(resp.start_date);
        }
        if ((resp.end_date != null) && !resp.end_date instanceof Date) {
          resp.end_date = new Date(resp.end_date);
        }
        return resp;
      };

      return PdoRequest;

    })(Backbone.RelationalModel);
    return United.Models.Dashboard.PdoRequest.setup();
  });

}).call(this);
