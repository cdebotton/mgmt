// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['backbone', 'ns'], function(Backbone, ns) {
    ns('United.Views.Projects.ProjectOverview');
    return United.Views.Projects.ProjectOverview = (function(_super) {

      __extends(ProjectOverview, _super);

      function ProjectOverview() {
        this.addOne = __bind(this.addOne, this);

        this.addAll = __bind(this.addAll, this);
        return ProjectOverview.__super__.constructor.apply(this, arguments);
      }

      ProjectOverview.prototype.el = '#project-overview';

      ProjectOverview.prototype.initialize = function() {
        this.model.get('project').get('tasks').on('add', this.updateTaskPreview, this);
        return this.model.get('project').get('tasks').on('add', this.selectNewTask, this);
      };

      ProjectOverview.prototype.addAll = function(tasks) {};

      ProjectOverview.prototype.addOne = function(task) {};

      return ProjectOverview;

    })(Backbone.View);
  });

}).call(this);
